name: mantid_total_scattering_ci

env:
  PYTHON_MAIN_VERSION: 3.7

on:
  workflow_dispatch:
    branches:
      - '*'
    tags:
      - 'v*'
  push:
    branches:
      - '*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - '*'

jobs:
  linux:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7"]

    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: conda-forge,mantid/label/nightly

      - name: Conda install deps
        shell: bash -l {0}
        run: |
          conda install mantid-framework
          conda install --file requirements.txt --file requirements-dev.txt
          pip install tox-gh-actions

      - name: Lint with Tox
        if: ${{ matrix.python-version == env.PYTHON_MAIN_VERSION }}
        shell: bash -l {0}
        run: |
          tox -e lint
          tox -e lint-security

      - name: Test with Tox
        shell: bash -l {0}
        run: tox

      - name: Coverage - create and upload report
        shell: bash -l {0}
        if: ${{ matrix.python-version == env.PYTHON_MAIN_VERSION }}
        run: |
          tox -e coverage
          pip install coverage
          bash <(curl -s https://codecov.io/bash)

      - name: Deploy full package to Anaconda
        shell: bash -l {0}
        if: startsWith( github.ref, 'refs/tags/v')
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          conda install -y anaconda-client conda-build conda-verify
          cd conda.recipe/mantid-total-scattering
          conda build --output-folder . .
          anaconda upload --label main linux-64/*.tar.bz2

      - name: Deploy python wrapper to Anaconda
        shell: bash -l {0}
        if: startsWith( github.ref, 'refs/tags/v')
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          conda install -y anaconda-client conda-build conda-verify
          cd conda.recipe/mantid-total-scattering-python-wrapper
          conda build --output-folder . .
          anaconda upload --label main noarch/*.tar.bz2

      - name: Trigger ORNL GitLab Pipeline for DEV
        if: ${{ github.ref == 'refs/heads/next' }}
        run: curl -sX POST -F token=${{ secrets.GITLAB_TRIGGER_TOKEN }} -F ref=main -F variables[PLAY]=conda/update -F variables[CONDA_ENV]=mantidtotalscattering-dev ${{ secrets.GITLAB_TRIGGER_URL }} > /dev/null

      - name: Trigger ORNL GitLab Pipeline for QA
        if: ${{ github.ref == 'refs/heads/qa' }}
        run: curl -sX POST -F token=${{ secrets.GITLAB_TRIGGER_TOKEN }} -F ref=main -F variables[PLAY]=conda/update -F variables[CONDA_ENV]=mantidtotalscattering-qa ${{ secrets.GITLAB_TRIGGER_URL }} > /dev/null

      - name: Trigger ORNL GitLab Pipeline for PROD
        if: startsWith( github.ref, 'refs/tags/v')
        run: curl -sX POST -F token=${{ secrets.GITLAB_TRIGGER_TOKEN }} -F ref=main -F variables[PLAY]=conda/update -F variables[CONDA_ENV]=mantidtotalscattering ${{ secrets.GITLAB_TRIGGER_URL }} > /dev/null
